name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.40.x

    - name: Cache Deno dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/deno
          ~/.deno
        key: deno-${{ hashFiles('deno.json', 'deno.lock') }}
        restore-keys: |
          deno-

    - name: Check formatting
      run: deno fmt --check

    - name: Lint code
      run: deno lint

    - name: Type check
      run: deno task type-check

    - name: Run tests
      run: deno task test

    - name: Test server startup
      run: |
        timeout 10s deno task start &
        sleep 5
        curl -f http://localhost:8000/ || exit 1
        curl -f http://localhost:8000/about || exit 1
        pkill -f "deno.*main.ts" || true

  validate-truth-file:
    name: Validate Truth File
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.40.x

    - name: Validate truth file syntax
      run: deno check app/app.truth.ts

    - name: Test truth file loading
      run: |
        cd core/loader
        deno run --allow-read loader.ts ../../app/app.truth.ts

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [test, validate-truth-file]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.40.x

    - name: Cache Deno dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/deno
          ~/.deno
        key: deno-${{ hashFiles('deno.json', 'deno.lock') }}
        restore-keys: |
          deno-

    - name: Build bundle
      run: deno task build || echo "Build task not implemented yet"

    - name: Check bundle size
      run: |
        echo "Framework bundle analysis:"
        find . -name "*.ts" -path "./core/*" | wc -l | xargs echo "Core TypeScript files:"
        find . -name "*.ts" -path "./runtime/*" | wc -l | xargs echo "Runtime TypeScript files:"
        du -sh core/ runtime/ app/ | sort -hr